[
{
	"uri": "https://Erdan101.github.io/en/basics/",
	"title": "Generate Hugo Website",
	"tags": [],
	"description": "",
	"content": "Generate Hugo Website Table of Contents  Install Hugo   Create a Website   Customize the Website   "
},
{
	"uri": "https://Erdan101.github.io/en/cont/pages/",
	"title": "Install Git",
	"tags": [],
	"description": "",
	"content": "Download Git   Go to the Git download page.\n  Click on Windows to download the Windows version of Git.\n  Click on 64-bit Git for Windows Setup..   Please download the corresponding version according to your actual operating system.\n Installation Steps  Double-click on Git-2.31.0-64-bit.exe downloaded above. Follow the installation prompts to complete the Git installation. You will see the Git Bash icon on the desktop.  Set PATH of Git Please refer to Set PATH of Hugo to set path of Git.\nNotice that you need to enter the path where the git.exe file is located. (For example as C:\\Program Files\\Git\\bin.)\nNow you can open Git Bash to execute Git command.\n$ git help usage: git [--version] [--help] [-C \u0026lt;path\u0026gt;] [-c \u0026lt;name\u0026gt;=\u0026lt;value\u0026gt;] [--exec-path[=\u0026lt;path\u0026gt;]] [--html-path] [--man-path] [--info-path] [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare] [--git-dir=\u0026lt;path\u0026gt;] [--work-tree=\u0026lt;path\u0026gt;] [--namespace=\u0026lt;name\u0026gt;] [--super-prefix=\u0026lt;path\u0026gt;] [--config-env=\u0026lt;name\u0026gt;=\u0026lt;envvar\u0026gt;] \u0026lt;command\u0026gt; [\u0026lt;args\u0026gt;] "
},
{
	"uri": "https://Erdan101.github.io/en/cont/",
	"title": "Host Website on Github",
	"tags": [],
	"description": "",
	"content": "Host Website on Github Table of Contents  Install Git   Create Github Repository   Deploy the Website   "
},
{
	"uri": "https://Erdan101.github.io/en/cont/repo/",
	"title": "Create Github Repository",
	"tags": [],
	"description": "",
	"content": "Create a repository on Github to store your Hugo website files.\nSign in to Github   Sign up for a GitHub account.\nIf you already have a Github account, just skip this step.\n  Sign in to Github with your uername and password.\n  Create a Repository   Click on New repository on the right of the page.\n  Input Erdan101.github.io under Repository name.\n  You must use a \u0026lt;USERNAME\u0026gt;.github.io to host your generated content, so replace the Erdan101 with your username.\n Click on Create repository.  "
},
{
	"uri": "https://Erdan101.github.io/en/cont/push/",
	"title": "Deploy the Website",
	"tags": [],
	"description": "",
	"content": "Rebuild the Site Run hugo to rebuild your site.\nF:\\Hugo\\Sites\\mysite\u0026gt; hugo Start building sites … | EN | ZH -------------------+----+----- Pages | 84 | 10 Paginator pages | 0 | 0 Non-page files | 21 | 0 Static files | 84 | 84 Processed images | 0 | 0 Aliases | 1 | 0 Sitemaps | 2 | 1 Cleaned | 0 | 0 Total in 590 ms The public/ directory will be generated right away.\nHost on Github   Double-click on Git Bash icon to open it.\n  Run the following command to add and push the website code on the Github repository.\n$ cd F:Hugo/Sites/mysite/public $ git init $ git remote add origin https://github.com/Erdan101/Erdan101.github.io/ $ git add . $ git commit -m \u0026quot;first commit\u0026quot; $ git push -f origin master:main   Access the Website The final step!\nInput the Erdan101.github.io in the browser\u0026rsquo;s address bar and press Enter to visit the website.\nAmazing! It works!\n"
},
{
	"uri": "https://Erdan101.github.io/en/basics/installation/",
	"title": "Install Hugo",
	"tags": [],
	"description": "",
	"content": " Here I take Window 10 as an example to introduce. To install Hugo on other platforms such as Linux or macOS, please refer to Install Hugo.\n Craeate Folders First, create folders for storing the Hugo executable and the generated Hugo website.\n  Create a new folder: F:\\Hugo (or anywhere you want to install Hugo).\n  Create a subfolder: F:\\Hugo\\bin.\n  eate another subfolder: F:\\Hugo\\Sites.\n  Download and Install Hugo   Go to the Hugo Releases page.\n  Scroll to the bottom of the release announcement to see the downloads.\n  Find the download link for Windows, and click to download according to your operating system version. For example, download Hugo_0.81.0_Windows-64bit.zip if your computer is 64-bit.   Unzip the downloaded package into F: Hugo\\bin and you can get three files: hugo.exe, LICENSE and readme. md.\n  Set PATH of Hugo   Right click on the Start button.\n  Click on System.\n  Click on the Environment Variables… button on the bottom.\n  In the User variables section, find the row that starts with PATH.\n  Double-click on PATH.\n  Click the New… button，and type in the folder where hugo.exe was extracted. For example, here I typed: F:\\Hugo\\bin.\n  Click OK.\n  In the System variables section, add the PATH in the same way as the user variables.\n  Click OK at every window to exit.\n  Verify the Installation   Open a Command Prompt.\n  type hugo version and press Enter. You can see the following output:\nhugo v0.81.0-59D15C97 windows/amd64 BuildDate=2021-02-19T17:07:12Z VendorInfo=gohugoio If you do, the installation is complete.\n  "
},
{
	"uri": "https://Erdan101.github.io/en/basics/configuration/",
	"title": "Create a Website",
	"tags": [],
	"description": "",
	"content": "Once Hugo is installed successfully, you can use the Hugo command to create a website.\nGenerate a New Site   Open the command prompt.\n  At the prompt, change the directory to the Sites directory.\nC:\\Users\\Administrator\u0026gt; cd F:\\Hugo\\Sites\\   Run the command to generate a new site. I’m using mysite as the name of the site.\nF:\\Hugo\\Sites\u0026gt; hugo new site mysite After successful execution, you should get output similar to the following and have a directory at F:\\Hugo\\Sites\\mysite.\nCongratulations! Your new Hugo site is created in F:\\Hugo\\Sites\\mysite. Just a few more steps and you\u0026#39;re ready to go: 1.Download a theme into the same-named folder. ... 3.Start the built-in live server via \u0026#34;hugo server\u0026#34;. Visit https://gohugo.io/ for quickstart guide and full documentation.   Add a Theme   Choose a theme from https://themes.gohugo.io/tags/documentation/. I\u0026rsquo;m using the Learn theme.\n  Click Download to download the theme.\n  Extract that .zip file to get a gohugo-theme-learn-master directory.\n  Rename that directory to gohugo-theme-learn, and move it into the themes/ directory.\n  Copy the files in the themes\\hugo-theme-learn\\exampleSitedirectory to the mysite\\ directory and click Replace the files in the target to overwrite them.\n  Change the themesdir = \u0026quot;../..\u0026quot; to themesdir = \u0026quot;themes\u0026quot; in the config.toml file.\ntheme = \u0026#34;hugo-theme-learn\u0026#34; themesdir = \u0026#34;themes\u0026#34;   Start the Hugo Server   Perform the following command to start the Hugo server.\nC:\\Users\\Administrator\u0026gt; cd F:\\Hugo\\Sites\\mysite F:\\Hugo\\Sites\\mysite\u0026gt; hugo server -D Start building sites … | EN | FR | ZH -------------------+----+----+----- Pages | 63 | 60 | 10 Paginator pages | 0 | 0 | 0 Non-page files | 21 | 0 | 0 Static files | 84 | 84 | 84 Processed images | 0 | 0 | 0 Aliases | 1 | 0 | 0 Sitemaps | 2 | 1 | 1 Cleaned | 0 | 0 | 0 Built in 307 ms Watching for changes in F:\\Hugo\\Sites\\mysite\\{archetypes,content,data,layouts,static,themes} Watching for config changes in F:\\Hugo\\Sites\\mysite\\config.toml Environment: \u0026#34;development\u0026#34; Serving pages from memory Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stop   Now, you can navigate to the new site at http://localhost:1313/. The following interface shows that the website started successfully.   "
},
{
	"uri": "https://Erdan101.github.io/en/basics/style-customization/",
	"title": "Customize the Website",
	"tags": [],
	"description": "",
	"content": "The theme has been built to be as configurable as possible. So we can customize our website by modifying the configuration files, such as config.toml, theme.toml and the files in layouts/partials/.\nSite Configuration   Open up config.toml in a text editor. For example，I use the MarkdownPad2.\n  Replace the title to make it more personal.\nbaseURL = \u0026#34;https://Erdan101.github.io\u0026#34; languageCode = \u0026#34;en-US\u0026#34; defaultContentLanguage = \u0026#34;en\u0026#34; title = \u0026#34;Hugo Learning Documentation\u0026#34; theme = \u0026#34;hugo-theme-learn\u0026#34; themesdir = \u0026#34;themes\u0026#34; For more specific configuration options about Learn theme, see the theme site.\n  Add or Modify the Content In addition to changing the theme configuration, we also need to modify the files in content to customize our website.\nBefore this, you should have a Markdown tool installed, or you can\u0026rsquo;t edit the .md files.\n Also, you can use the new command to manually create content files (for example as content//.) and provide metadata in them.\nF:\\Hugo\\Sites\u0026gt; hugo new leraning/install-hugo.md "
},
{
	"uri": "https://Erdan101.github.io/en/",
	"title": "Hugo website",
	"tags": [],
	"description": "",
	"content": "Build a Website with Hugo The world’s fastest framework for building websites Hugo is one of the most popular open-source static site generators. With its amazing speed and flexibility, Hugo makes building websites fun again.\nToday I will create a Hugo site using the Learn theme and host the site code on Github.\nLet\u0026rsquo;s get start!   Generate a Hugo website\n  Host Your Website on Github\n  Documentation website Feel free to update this content, just click the Edit this page link and pullrequest it.\n"
},
{
	"uri": "https://Erdan101.github.io/en/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://Erdan101.github.io/en/credits/",
	"title": "Credits",
	"tags": [],
	"description": "",
	"content": "Contributors Thanks to them for making Open Source Software a better place !\nAnd a special thanks to @vjeantet for his work on docdock, a fork of hugo-theme-learn. v2.0.0 of this theme is inspired by his work.\nPackages and libraries  mermaid - generation of diagram and flowchart from text in a similar manner as markdown font awesome - the iconic font and CSS framework jQuery - The Write Less, Do More, JavaScript Library lunr - Lunr enables you to provide a great search experience without the need for external, server-side, search services\u0026hellip; horsey - Progressive and customizable autocomplete component clipboard.js - copy text to clipboard highlight.js - Javascript syntax highlighter modernizr - A JavaScript toolkit that allows web developers to use new CSS3 and HTML5 features while maintaining a fine level of control over browsers that don\u0026rsquo;t support  Tooling  Netlify - Continuous deployement and hosting of this documentation Hugo  "
},
{
	"uri": "https://Erdan101.github.io/en/credits.fr/",
	"title": "Crédits",
	"tags": [],
	"description": "",
	"content": "Contributeurs Merci à eux de rendre le monde Open Source meilleur !\nEt un grand merci à @vjeantet pour son travail sur docdock, un fork de hugo-theme-learn. La v2.0.0 du thème est en grande partie inspirée de son travail.\nPackages et librairies  mermaid - géneration de diagrames et graphiques à partir de texte similaire à Markdown font awesome - Le framework de polices iconiques jQuery - La plus connue des librairies Javascript lunr - Lunr fournit des fonctions de recherche sans service externe horsey - Autocomplétion de composants (utiliser pour les suggestions de recherche) clipboard.js - Copier le texte dans le presse-papier highlight.js - Mise en valeur de syntaxes modernizr - Une boite à outil Javascript qui permet aux développeurs d\u0026rsquo;utiliser les dernières fonctionnalités de CSS et HTML5, même sur de vieux navigateurs.  Outils  Netlify - Déploiement continue et hébergement de cette documentation Hugo  "
},
{
	"uri": "https://Erdan101.github.io/en/showcase/",
	"title": "Showcase",
	"tags": [],
	"description": "",
	"content": "TAT by OVH Tshark.dev by Ross Jacobs inteliver by Amir Lavasani "
},
{
	"uri": "https://Erdan101.github.io/en/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://Erdan101.github.io/en/vitrine/",
	"title": "Vitrine",
	"tags": [],
	"description": "",
	"content": "TAT par OVH Tshark.dev par Ross Jacobs inteliver by Amir Lavasani "
}]