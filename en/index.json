[
{
	"uri": "https://Erdan101.github.io/en/basics/",
	"title": "Generate Hugo Website",
	"tags": [],
	"description": "",
	"content": "Generate Hugo Website  Install Hugo   Create a Website   Customize the Website   "
},
{
	"uri": "https://Erdan101.github.io/en/cont/pages/",
	"title": "Install Git",
	"tags": [],
	"description": "",
	"content": "Download Git   Go to the Git download page.\n  Click on Windows to download the Windows version of Git.\n  Click on 64-bit Git for Windows Setup..\n  Please download the corresponding version according to your actual operating system.\n Installation Steps  Double-click on Git-2.31.0-64-bit.exe downloaded above. Follow the installation prompts to complete the Git installation. You will see the Git Bash icon on the desktop.  Set PATH of Git Please refer to Set PATH of Hugo to set path of Git.\nNotice that you need to enter the path where the git.exe file is located. (For example as C:\\Program Files\\Git\\bin.)\nNow you can open Git Bash to execute Git command.\n"
},
{
	"uri": "https://Erdan101.github.io/en/cont/",
	"title": "Host Hugo Website on Github",
	"tags": [],
	"description": "",
	"content": "Host Hugo Website on Github  Install Git   Create Github Repository   Deloy the Website   Code highlighting   Icons and logos   Multilingual and i18n   "
},
{
	"uri": "https://Erdan101.github.io/en/cont/repo/",
	"title": "Create Github Repository",
	"tags": [],
	"description": "",
	"content": "Create a repository on Github to store your Hugo website files.\nSign in to Github   Sign up for a GitHub account.\nIf you already have a Github account, just skip this step.\n  Sign in to Github with your uername and password.\n  Create a Repository  Click on New repository on the right of the page. Input Erdan101.github.io under Repository name.  You must use a \u0026lt;USERNAME\u0026gt;.github.io to host your generated content, so replace the Erdan101 with your username.\n Click on Create repository.  "
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/",
	"title": "Customize and Update the Website",
	"tags": [],
	"description": "",
	"content": "Hugo uses Markdown for its simple content format. However, there are a lot of things that Markdown doesn’t support well. You could use pure HTML to expand possibilities.\nBut this happens to be a bad idea. Everyone uses Markdown because it\u0026rsquo;s pure and simple to read even non-rendered. You should avoid HTML to keep it as simple as possible.\nTo avoid this limitations, Hugo created shortcodes. A shortcode is a simple snippet inside a page.\nHugo-theme-learn provides multiple shortcodes on top of existing ones.\n Attachments  The Attachments shortcode displays a list of files attached to a page.\n Attachments (Pièces jointes)  The Attachments shortcode displays a list of files attached to a page.\n Button  Nice buttons on your page.\n Button (Bouton)  De beaux boutons sur votre page.\n Children  List the child pages of a page\n Expand  Displays an expandable/collapsible section of text on your page\n Expand  Affiche une section de texte qui se plie et se déplie\n Mermaid  Generation of diagram and flowchart from text in a similar manner as markdown\n Mermaid  Génération de diagrammes à partir de texte, dans le même style que Markdown\n Notice  Disclaimers to help you structure your page\n Notice  Message pour vous aider à structurer votre contenu\n Site param  Get value of site params variables in your page.\n Site param  Afficher la valeur d\u0026#39;un paramètre global du site dans votre page\n Tabbed views  Synchronize selection of content in different tabbed views\n "
},
{
	"uri": "https://Erdan101.github.io/en/cont/push/",
	"title": "Deloy the Website",
	"tags": [],
	"description": "",
	"content": "Rebuild Your Site Push files to Github Access Your Website "
},
{
	"uri": "https://Erdan101.github.io/en/basics/installation/",
	"title": "Install Hugo",
	"tags": [],
	"description": "",
	"content": " 本文以Window 10为例进行介绍，在Linux、macOS等其他平台安装Hugo，请参考官网文档安装Hugo。\n 准备工作 首先在本地建立用于存放Hugo的解压文件以及站点文件的文件夹。\n 在F盘(或其他你想要安装Hugo的任意地方）新建一个目录：F:\\Hugo。 创建子目录：F:\\Hugo\\bin,用于存放Hugo安装文件。 创建子目录：F:\\Hugo\\Sites，用于存放站点文件。  下载安装  使用浏览器打开Hugo的发布网站。 将页面滚动到发布公告的底部，便可查看到下载链接。 找到Windows的下载链接，根据电脑的操作系统版本，单击进行下载。如：我的电脑是64位，则下载Hugo_0.81.0_Windows-64bit.zip。 根据电脑系统类型选择对应版本，此处我的电脑是64位。 将下载好的压缩包解压到F:\\Hugo\\bin，可得hugo.exe、 LICENSE以及README.md三个文件。   设置环境变量  右键单击“此电脑”，选择“属性”。 在窗口左侧单击“高级系统设置”。 在底部单击“环境变量(N)…”。 在用户变量区域，找到“Path”，双击，弹出“编辑环境变量”窗口。 单击“新建”，输入hugo.exe所在的目录。如此处我的为：F:\\Hugo\\bin。 单击“确定”，回到“环境变量”窗口。 在系统变量区域，按照设置用户变量的同样方式，设置好系统变量。 7.设置完成后，在每个窗口底部依次单击“确定”，退出窗口。  验证安装  打开Windows的cmd命令行窗口。 输入hugo version并回车。如果成功显示hugo版本号，则表示安装完成。  "
},
{
	"uri": "https://Erdan101.github.io/en/cont/syntaxhighlight/",
	"title": "Code highlighting",
	"tags": [],
	"description": "",
	"content": "Learn theme uses highlight.js to provide code syntax highlighting.\nMarkdown syntax Wrap the code block with three backticks and the name of the language. Highlight will try to auto detect the language if one is not provided.\n```json [ { \u0026#34;title\u0026#34;: \u0026#34;apples\u0026#34;, \u0026#34;count\u0026#34;: [12000, 20000], \u0026#34;description\u0026#34;: {\u0026#34;text\u0026#34;: \u0026#34;...\u0026#34;, \u0026#34;sensitive\u0026#34;: false} }, { \u0026#34;title\u0026#34;: \u0026#34;oranges\u0026#34;, \u0026#34;count\u0026#34;: [17500, null], \u0026#34;description\u0026#34;: {\u0026#34;text\u0026#34;: \u0026#34;...\u0026#34;, \u0026#34;sensitive\u0026#34;: false} } ] ``` Renders to:\n[ { \u0026#34;title\u0026#34;: \u0026#34;apples\u0026#34;, \u0026#34;count\u0026#34;: [12000, 20000], \u0026#34;description\u0026#34;: {\u0026#34;text\u0026#34;: \u0026#34;...\u0026#34;, \u0026#34;sensitive\u0026#34;: false} }, { \u0026#34;title\u0026#34;: \u0026#34;oranges\u0026#34;, \u0026#34;count\u0026#34;: [17500, null], \u0026#34;description\u0026#34;: {\u0026#34;text\u0026#34;: \u0026#34;...\u0026#34;, \u0026#34;sensitive\u0026#34;: false} } ] Supported languages Learn theme ships with its own version of highlight.js to support offline browsing. The included package supports 38 common languages, as described on the highlight.js download page.\nIdentifying failed language detection Highlight will write a warning to the browser console if a requested language was not found. For example, the following code block references an imaginary language foo. An error will be output to the console on this page.\n```foo bar ``` Could not find the language 'foo', did you forget to load/include a language module?(anonymous) @ highlight.pack.js Supporting additional languages To support languages other than the 38 common languages included in the default highlight.js you will need to download your own version of highlight.js and add it to your site content.\nDownload custom highlight.js Visit https://highlightjs.org/download/ and select your desired language support. Note that more languages means greater package size.\nAdd custom highlight.js to static resources Inside the zip archive downloaded from highlight.js extract the file named highlight.pack.js. Move this file to the new location\nstatic/js/highlight.pack.js Do not replace the existing file at themes/hugo-theme-learn/static/js/highlight.pack.js.\nIncluding the file in the correct path will override the theme default highlight.pack.js and prevent issues caused in the future if the theme default file is updated.\nFurther usage information See https://highlightjs.org/usage/\n"
},
{
	"uri": "https://Erdan101.github.io/en/basics/configuration/",
	"title": "Create a Website",
	"tags": [],
	"description": "",
	"content": "Once Hugo is installed successfully, you can use the Hugo command to create a website.\nGenerate a New Site   Open the command prompt.\n  At the prompt, change the directory to the Sites directory.\nC:\\Users\\Administrator\u0026gt; cd F:\\Hugo\\Sites\\ ``\n  Run the command to generate a new site. I’m using mysite as the name of the site.\nF:\\Hugo\\Sites\u0026gt; hugo new site mysite ``\nAfter successful execution, you should get output similar to the following and have a directory at F:\\Hugo\\Sites\\mysite.\nCongratulations! Your new Hugo site is created in F:\\Hugo\\Sites\\mysite. Just a few more steps and you're ready to go: 1.Download a theme into the same-named folder. ... 3.Start the built-in live server via \u0026quot;hugo server\u0026quot;. Visit https://gohugo.io/ for quickstart guide and full documentation. ``\n  Add a Theme   Choose a theme from https://themes.gohugo.io/tags/documentation/. I\u0026rsquo;m using the Learn theme.\n  Click Download to download the theme.\n  Extract that .zip file to get a “gohugo-theme-learn-master” directory.\n  Rename that directory to “gohugo-theme-learn”, and move it into the “themes/” directory.\n  Copy the files in the themes\\hugo-theme-learn\\exampleSitedirectory to the mysite\\ directory and click Replace the files in the target to overwrite them.\n  Change the themesdir = \u0026quot;../..\u0026quot; to themesdir = \u0026quot;themes\u0026quot; in the \u0026ldquo;config.toml\u0026rdquo; file.\n  Start the Hugo Server   Perform the following command to start the Hugo server.\nC:\\Users\\Administrator\u0026gt; cd F:\\Hugo\\Sites\\mysite F:\\Hugo\\Sites\\mysite\u0026gt; hugo server -D Start building sites … | EN | FR | ZH -------------------+----+----+----- Pages | 63 | 60 | 10 Paginator pages | 0 | 0 | 0 Non-page files | 21 | 0 | 0 Static files | 84 | 84 | 84 Processed images | 0 | 0 | 0 Aliases | 1 | 0 | 0 Sitemaps | 2 | 1 | 1 Cleaned | 0 | 0 | 0 Built in 307 ms Watching for changes in F:\\Hugo\\Sites\\mysite\\{archetypes,content,data,layouts,static,themes} Watching for config changes in F:\\Hugo\\Sites\\mysite\\config.toml Environment: \u0026#34;development\u0026#34; Serving pages from memory Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stop ``\n  Now, you can navigate to the new site at http://localhost:1313/. The following interface shows that the website started successfully.\n  "
},
{
	"uri": "https://Erdan101.github.io/en/basics/style-customization/",
	"title": "Customize the Website",
	"tags": [],
	"description": "",
	"content": "The theme has been built to be as configurable as possible. So we can customize our website by modifying the configuration files, such as config.toml, theme.toml and the files in layouts/partials/.\nSite Configuration   Open up config.toml in a text editor. For example，I use the MarkdownPad2.\n  Replace the title with something more personal.\nbaseURL = \u0026quot;https://Erdan101.github.io\u0026quot; languageCode = \u0026quot;en-US\u0026quot; defaultContentLanguage = \u0026quot;en\u0026quot; title = \u0026quot;Hugo Learning Documentation\u0026quot; theme = \u0026quot;hugo-theme-learn\u0026quot; themesdir = \u0026quot;themes\u0026quot; `` For more specific configuration options about Learn theme, see the theme site.\n  Add or Modify the Content In addition to changing the theme configuration, we also need to modify the files in content to customize our website.\nBefore this, you should have a Markdown tool installed, or you can not edit the .MD files.\n Also, you can use the new command to manually create content files (for example as content//.) and provide metadata in them.\nF:\\Hugo\\Sites\u0026gt; hugo new leraning/install-hugo.md "
},
{
	"uri": "https://Erdan101.github.io/en/cont/icons/",
	"title": "Icons and logos",
	"tags": [],
	"description": "",
	"content": "The Learn theme for Hugo loads the Font Awesome library, allowing you to easily display any icon or logo available in the Font Awesome free collection.\nFinding an icon Browse through the available icons in the Font Awesome Gallery. Notice that the free filter is enabled, as only the free icons are available by default.\nOnce on the Font Awesome page for a specific icon, for example the page for the heart, copy the HTML reference and paste into the markdown content.\nThe HTML to include the heart icon is:\n\u0026lt;i class=\u0026quot;fas fa-heart\u0026quot;\u0026gt;\u0026lt;/i\u0026gt; Including in markdown Paste the \u0026lt;i\u0026gt; HTML into markup and Font Awesome will load the relevant icon.\nBuilt with \u0026lt;i class=\u0026quot;fas fa-heart\u0026quot;\u0026gt;\u0026lt;/i\u0026gt; from Grav and Hugo Which appears as\nBuilt with from Grav and Hugo\nCustomising icons Font Awesome provides many ways to modify the icon\n Change colour (by default the icon will inherit the parent colour) Increase or decrease size Rotate Combine with other icons  Check the full documentation on web fonts with CSS for more.\n"
},
{
	"uri": "https://Erdan101.github.io/en/cont/i18n/",
	"title": "Multilingual and i18n",
	"tags": [],
	"description": "",
	"content": "Learn theme is fully compatible with Hugo multilingual mode.\nIt provides:\n Translation strings for default values (English and French). Feel free to contribute ! Automatic menu generation from multilingual content In-browser language switching  Basic configuration After learning how Hugo handle multilingual websites, define your languages in your config.toml file.\nFor example with current French and English website.\n# English is the default language defaultContentLanguage = \u0026#34;en\u0026#34; # Force to have /en/my-page and /fr/my-page routes, even for default language. defaultContentLanguageInSubdir= true [Languages] [Languages.en] title = \u0026#34;Documentation for Hugo Learn Theme\u0026#34; weight = 1 languageName = \u0026#34;English\u0026#34; [Languages.fr] title = \u0026#34;Documentation du thème Hugo Learn\u0026#34; weight = 2 languageName = \u0026#34;Français\u0026#34; Then, for each new page, append the id of the language to the file.\n Single file my-page.md is split in two files:  in English: my-page.en.md in French: my-page.fr.md   Single file _index.md is split in two files:  in English: _index.en.md in French: _index.fr.md    Be aware that only translated pages are displayed in menu. It\u0026rsquo;s not replaced with default language content.\n Use slug Front Matter parameter to translate urls too.\n Overwrite translation strings Translations strings are used for common default values used in the theme (Edit this page button, Search placeholder and so on). Translations are available in french and english but you may use another language or want to override default values.\nTo override these values, create a new file in your local i18n folder i18n/\u0026lt;idlanguage\u0026gt;.toml and inspire yourself from the theme themes/hugo-theme-learn/i18n/en.toml\nBy the way, as these translations could be used by other people, please take the time to propose a translation by making a PR to the theme !\nDisable language switching Switching the language in the browser is a great feature, but for some reasons you may want to disable it.\nJust set disableLanguageSwitchingButton=true in your config.toml\n[params] # When using mulitlingual website, disable the switch language button. disableLanguageSwitchingButton = true "
},
{
	"uri": "https://Erdan101.github.io/en/",
	"title": "Hugo website",
	"tags": [],
	"description": "",
	"content": "Build a Website with Hugo The world’s fastest framework for building websites Hugo is one of the most popular open-source static site generators. With its amazing speed and flexibility, Hugo makes building websites fun again.\nToday I will create a Hugo site using the Learn theme and host the site code on Github.\nLet\u0026rsquo;s get start!  Generate a website with Hugo Host Your New Hugo website on Github Customize and Update Your Website  Contribute to this documentation Feel free to update this content, just click the Edit this page link displayed on top right of each page, and pullrequest it\nYour modification will be deployed automatically when merged.\n Documentation website This current documentation has been statically generated with Hugo with a simple command : hugo -t hugo-theme-learn \u0026ndash; source code is available here at GitHub\nAutomatically published and hosted thanks to Netlify. Read more about Automated HUGO deployments with Netlify\n "
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/attachments/",
	"title": "Attachments",
	"tags": [],
	"description": "The Attachments shortcode displays a list of files attached to a page.",
	"content": "The Attachments shortcode displays a list of files attached to a page.\n  Attachments   BachGavotteShort.mp3  (357 kb)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 kb)   adivorciarsetoca00cape.pdf  (361 kb)   hugo.png  (17 kb)   movieselectricsheep-flock-244-32500-2.mp4  (340 kb)    Usage The shortcurt lists files found in a specific folder. Currently, it support two implementations for pages\n  If your page is a markdown file, attachements must be placed in a folder named like your page and ending with .files.\n  content  _index.md page.files  attachment.pdf   page.md       If your page is a folder, attachements must be placed in a nested \u0026lsquo;files\u0026rsquo; folder.\n  content  _index.md page  index.md files  attachment.pdf           Be aware that if you use a multilingual website, you will need to have as many folders as languages.\nThat\u0026rsquo;s all!\nParameters    Parameter Default Description     title \u0026ldquo;Attachments\u0026rdquo; List\u0026rsquo;s title   style \u0026quot;\u0026quot; Choose between \u0026ldquo;orange\u0026rdquo;, \u0026ldquo;grey\u0026rdquo;, \u0026ldquo;blue\u0026rdquo; and \u0026ldquo;green\u0026rdquo; for nice style   pattern \u0026ldquo;.*\u0026rdquo; A regular expressions, used to filter the attachments by file name. The pattern parameter value must be regular expressions.    For example:\n To match a file suffix of \u0026lsquo;jpg\u0026rsquo;, use *.jpg (not *.jpg). To match file names ending in \u0026lsquo;jpg\u0026rsquo; or \u0026lsquo;png\u0026rsquo;, use .*(jpg|png)  Examples List of attachments ending in pdf or mp4 {{%attachments title=\u0026quot;Related files\u0026quot; pattern=\u0026quot;.*(pdf|mp4)\u0026quot;/%}}  renders as\n  Related files   Carroll_AliceAuPaysDesMerveilles.pdf  (175 kb)   adivorciarsetoca00cape.pdf  (361 kb)   movieselectricsheep-flock-244-32500-2.mp4  (340 kb)    Colored styled box {{%attachments style=\u0026quot;orange\u0026quot; /%}}  renders as\n  Attachments   BachGavotteShort.mp3  (357 kb)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 kb)   adivorciarsetoca00cape.pdf  (361 kb)   hugo.png  (17 kb)   movieselectricsheep-flock-244-32500-2.mp4  (340 kb)    {{%attachments style=\u0026quot;grey\u0026quot; /%}}  renders as\n  Attachments   BachGavotteShort.mp3  (357 kb)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 kb)   adivorciarsetoca00cape.pdf  (361 kb)   hugo.png  (17 kb)   movieselectricsheep-flock-244-32500-2.mp4  (340 kb)    {{%attachments style=\u0026quot;blue\u0026quot; /%}}  renders as\n  Attachments   BachGavotteShort.mp3  (357 kb)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 kb)   adivorciarsetoca00cape.pdf  (361 kb)   hugo.png  (17 kb)   movieselectricsheep-flock-244-32500-2.mp4  (340 kb)    {{%attachments style=\u0026quot;green\u0026quot; /%}}  renders as\n  Attachments   BachGavotteShort.mp3  (357 kb)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 kb)   adivorciarsetoca00cape.pdf  (361 kb)   hugo.png  (17 kb)   movieselectricsheep-flock-244-32500-2.mp4  (340 kb)    "
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/attachments.fr/",
	"title": "Attachments (Pièces jointes)",
	"tags": [],
	"description": "The Attachments shortcode displays a list of files attached to a page.",
	"content": "Le shortcode Attachments affiche une liste de pièces jointes d\u0026rsquo;une page.\n  Attachments   BachGavotteShort.mp3  (357 kb)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 kb)   adivorciarsetoca00cape.pdf  (361 kb)   hugo.png  (17 kb)   movieselectricsheep-flock-244-32500-2.mp4  (340 kb)    Utilisation Le shortcode affiche la liste de fichiers trouvés dans un dossier spécifique A l\u0026rsquo;heure actuelle, il supporte deux implémentations\n  Si votre page est un fichier Markdown, les pièces jointes doivent être placée dans un dossier nommé comme le nom de la page et suffixé par .files.\n  content  _index.md page.files  attachment.pdf   page.md       Si votre page est un dossier, les pièces jointes doivent être placées dans un dossier fils \u0026lsquo;files\u0026rsquo;.\n  content  _index.md page  index.md files  attachment.pdf           Attention, si votre site est multi-langue, vous devrez avec autant de dossier qu\u0026rsquo;il y a de langues.\nC\u0026rsquo;est tout !\nParamètres    Paramètre Défaut Description     title \u0026ldquo;Pièces jointes\u0026rdquo; Titre de la liste   style \u0026quot;\u0026quot; Choisir entre \u0026ldquo;orange\u0026rdquo;, \u0026ldquo;grey\u0026rdquo;, \u0026ldquo;blue\u0026rdquo; et \u0026ldquo;green\u0026rdquo; pour un style plus sympa   pattern \u0026ldquo;.*\u0026rdquo; Une expression régulière, utilisée pour filtrer les pièces jointes par leur nom de fichier. Le paramètre pattern doit être une expression régulière.    Par exemple:\n Pour trouver les fichiers avec le suffixe \u0026lsquo;jpg\u0026rsquo;, utilisez *.jpg (pas *.jpg). Pour trouver les fichiers avec les suffixe \u0026lsquo;jpg\u0026rsquo; ou \u0026lsquo;png\u0026rsquo;, utilisez .*(jpg|png)  Exemples Lister les pièces jointes de type pdf ou mp4 {{%attachments title=\u0026quot;Fichiers associés\u0026quot; pattern=\u0026quot;.*(pdf|mp4)\u0026quot;/%}}  s\u0026rsquo;affiche comme\n  Fichiers associés   Carroll_AliceAuPaysDesMerveilles.pdf  (175 kb)   adivorciarsetoca00cape.pdf  (361 kb)   movieselectricsheep-flock-244-32500-2.mp4  (340 kb)    Modifier le style {{%attachments style=\u0026quot;orange\u0026quot; /%}}  s\u0026rsquo;affiche comme\n  Attachments   BachGavotteShort.mp3  (357 kb)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 kb)   adivorciarsetoca00cape.pdf  (361 kb)   hugo.png  (17 kb)   movieselectricsheep-flock-244-32500-2.mp4  (340 kb)    {{%attachments style=\u0026quot;grey\u0026quot; /%}}  s\u0026rsquo;affiche comme\n  Attachments   BachGavotteShort.mp3  (357 kb)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 kb)   adivorciarsetoca00cape.pdf  (361 kb)   hugo.png  (17 kb)   movieselectricsheep-flock-244-32500-2.mp4  (340 kb)    {{%attachments style=\u0026quot;blue\u0026quot; /%}}  s\u0026rsquo;affiche comme\n  Attachments   BachGavotteShort.mp3  (357 kb)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 kb)   adivorciarsetoca00cape.pdf  (361 kb)   hugo.png  (17 kb)   movieselectricsheep-flock-244-32500-2.mp4  (340 kb)    {{%attachments style=\u0026quot;green\u0026quot; /%}}  s\u0026rsquo;affiche comme\n  Attachments   BachGavotteShort.mp3  (357 kb)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 kb)   adivorciarsetoca00cape.pdf  (361 kb)   hugo.png  (17 kb)   movieselectricsheep-flock-244-32500-2.mp4  (340 kb)    "
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/button/",
	"title": "Button",
	"tags": [],
	"description": "Nice buttons on your page.",
	"content": "A button is a just a clickable button with optional icon.\n{{% button href=\u0026quot;https://getgrav.org/\u0026quot; %}}Get Grav{{% /button %}} {{% button href=\u0026quot;https://getgrav.org/\u0026quot; icon=\u0026quot;fas fa-download\u0026quot; %}}Get Grav with icon{{% /button %}} {{% button href=\u0026quot;https://getgrav.org/\u0026quot; icon=\u0026quot;fas fa-download\u0026quot; icon-position=\u0026quot;right\u0026quot; %}}Get Grav with icon right{{% /button %}}  Get Grav   Get Grav with icon  Get Grav with icon right   "
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/button.fr/",
	"title": "Button (Bouton)",
	"tags": [],
	"description": "De beaux boutons sur votre page.",
	"content": "Le shortcode button est simplement un bouton cliquable avec une icône optionnelle.\n{{% button href=\u0026quot;https://getgrav.org/\u0026quot; %}}Téléchargez Grav{{% /button %}} {{% button href=\u0026quot;https://getgrav.org/\u0026quot; icon=\u0026quot;fas fa-download\u0026quot; %}}Téléchargez Grav avec icône{{% /button %}} {{% button href=\u0026quot;https://getgrav.org/\u0026quot; icon=\u0026quot;fas fa-download\u0026quot; icon-position=\u0026quot;right\u0026quot; %}}Téléchargez Grav avec icône à droite{{% /button %}}  Téléchargez Grav   Téléchargez Grav avec icône  Téléchargez Grav avec icône à droite   "
},
{
	"uri": "https://Erdan101.github.io/en/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/children/",
	"title": "Children",
	"tags": [],
	"description": "List the child pages of a page",
	"content": "Use the children shortcode to list the child pages of a page and the further descendants (children\u0026rsquo;s children). By default, the shortcode displays links to the child pages.\nUsage    Parameter Default Description     page current Specify the page name (section name) to display children for   style \u0026ldquo;li\u0026rdquo; Choose the style used to display descendants. It could be any HTML tag name   showhidden \u0026ldquo;false\u0026rdquo; When true, child pages hidden from the menu will be displayed   description \u0026ldquo;false\u0026rdquo; Allows you to include a short text under each page in the list. When no description exists for the page, children shortcode takes the first 70 words of your content. Read more info about summaries on gohugo.io   depth 1 Enter a number to specify the depth of descendants to display. For example, if the value is 2, the shortcode will display 2 levels of child pages. Tips: set 999 to get all descendants   sort none Sort children by Weight - to sort on menu order, Name - to sort alphabetically on menu label, Identifier - to sort alphabetically on identifier set in frontmatter, and URL - to sort by URL    Demo {{% children %}}   page 1   page 2   page 3   page test   page test   {{% children description=\u0026quot;true\u0026quot; %}}   page 1  This is a demo child page\n page 2  Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n page 3  This is a demo child page\n page test  This is a page test\n page test  Ceci est une page test\n {{% children depth=\u0026quot;3\u0026quot; showhidden=\u0026quot;true\u0026quot; %}}   page 1    page 1-1    page 1-1-1     page 2    page test 3     page test 3      page 3     page 4     page test     page test     {{% children style=\u0026quot;h2\u0026quot; depth=\u0026quot;3\u0026quot; description=\u0026quot;true\u0026quot; %}}   page 1  This is a demo child page\n page 1-1  This is a demo child page\n page 1-1-1  This is a demo child page\n page 2  Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n page test 3  This is a page test\n page test 3  Ceci est une page test\n page 3  This is a demo child page\n page test  This is a page test\n page test  Ceci est une page test\n {{% children style=\u0026quot;div\u0026quot; depth=\u0026quot;999\u0026quot; %}}   page 1   page 1-1   page 1-1-1   page 1-1-1-1   page 1-1-1-1-1   page 2   page test 3   page test 3   page 3   page test   page test   "
},
{
	"uri": "https://Erdan101.github.io/en/credits/",
	"title": "Credits",
	"tags": [],
	"description": "",
	"content": "Contributors Thanks to them for making Open Source Software a better place !\nAnd a special thanks to @vjeantet for his work on docdock, a fork of hugo-theme-learn. v2.0.0 of this theme is inspired by his work.\nPackages and libraries  mermaid - generation of diagram and flowchart from text in a similar manner as markdown font awesome - the iconic font and CSS framework jQuery - The Write Less, Do More, JavaScript Library lunr - Lunr enables you to provide a great search experience without the need for external, server-side, search services\u0026hellip; horsey - Progressive and customizable autocomplete component clipboard.js - copy text to clipboard highlight.js - Javascript syntax highlighter modernizr - A JavaScript toolkit that allows web developers to use new CSS3 and HTML5 features while maintaining a fine level of control over browsers that don\u0026rsquo;t support  Tooling  Netlify - Continuous deployement and hosting of this documentation Hugo  "
},
{
	"uri": "https://Erdan101.github.io/en/credits.fr/",
	"title": "Crédits",
	"tags": [],
	"description": "",
	"content": "Contributeurs Merci à eux de rendre le monde Open Source meilleur !\nEt un grand merci à @vjeantet pour son travail sur docdock, un fork de hugo-theme-learn. La v2.0.0 du thème est en grande partie inspirée de son travail.\nPackages et librairies  mermaid - géneration de diagrames et graphiques à partir de texte similaire à Markdown font awesome - Le framework de polices iconiques jQuery - La plus connue des librairies Javascript lunr - Lunr fournit des fonctions de recherche sans service externe horsey - Autocomplétion de composants (utiliser pour les suggestions de recherche) clipboard.js - Copier le texte dans le presse-papier highlight.js - Mise en valeur de syntaxes modernizr - Une boite à outil Javascript qui permet aux développeurs d\u0026rsquo;utiliser les dernières fonctionnalités de CSS et HTML5, même sur de vieux navigateurs.  Outils  Netlify - Déploiement continue et hébergement de cette documentation Hugo  "
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/expand/",
	"title": "Expand",
	"tags": [],
	"description": "Displays an expandable/collapsible section of text on your page",
	"content": "The Expand shortcode displays an expandable/collapsible section of text on your page. Here is an example\n  Expand me...   Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  Usage this shortcode takes exactly one optional parameter to define the text that appears next to the expand/collapse icon. (default is \u0026ldquo;Expand me\u0026hellip;\u0026quot;)\n{{%expand \u0026quot;Is this learn theme rocks ?\u0026quot; %}}Yes !.{{% /expand%}}    Is this learn theme rocks ?   Yes !   Demo {{%expand%}} Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. {{% /expand%}}    Expand me...   Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  "
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/expand.fr/",
	"title": "Expand",
	"tags": [],
	"description": "Affiche une section de texte qui se plie et se déplie",
	"content": "Le shortcode Expand affiche une section de texte qui se plie et se déplie. Ci-dessous un exemple.\n  Expand me...   Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  Utilisation Ce shortcode prends exactement un paramètre optionel pour définir le texte à côté de l\u0026rsquo;icone. (valeur par défaut est \u0026ldquo;Déroulez-moi\u0026hellip;\u0026quot;)\n{{%expand \u0026quot;Est-ce que ce thème envoie du pâté ?\u0026quot; %}}Oui !.{{% /expand%}}    Est-ce que ce thème envoie du pâté ?   Oui !   Demo {{%expand%}} Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. {{% /expand%}}    Expand me...   Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  "
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/mermaid/",
	"title": "Mermaid",
	"tags": [],
	"description": "Generation of diagram and flowchart from text in a similar manner as markdown",
	"content": "Mermaid is a library helping you to generate diagram and flowcharts from text, in a similar manner as Markdown.\nJust insert your mermaid code in the mermaid shortcode and that\u0026rsquo;s it.\nFlowchart example {{\u0026lt;mermaid align=\u0026quot;left\u0026quot;\u0026gt;}} graph LR; A[Hard edge] --\u0026gt;|Link text| B(Round edge) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result one] C --\u0026gt;|Two| E[Result two] {{\u0026lt; /mermaid \u0026gt;}}  renders as\ngraph LR; A[Hard edge] --|Link text| B(Round edge) B -- C{Decision} C --|One| D[Result one] C --|Two| E[Result two]  Sequence example {{\u0026lt; mermaid \u0026gt;}} sequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good! {{\u0026lt; /mermaid \u0026gt;}}  renders as\nsequenceDiagram participant Alice participant Bob Alice-John: Hello John, how are you? loop Healthcheck John-John: Fight against hypochondria end Note right of John: Rational thoughts prevail... John--Alice: Great! John-Bob: How about you? Bob--John: Jolly good!  GANTT Example {{\u0026lt; mermaid \u0026gt;}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d {{\u0026lt; /mermaid \u0026gt;}}  renders as\ngantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d  Class example {{\u0026lt; mermaid \u0026gt;}} classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u0026lt;--\u0026gt; C2: Cool label {{\u0026lt; /mermaid \u0026gt;}}  renders as\nclassDiagram Class01 C2 : Where am i? Class09 --* C3 Class09 --| Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08  C2: Cool label  Git example {{\u0026lt; mermaid \u0026gt;}} gitGraph: options { \u0026quot;nodeSpacing\u0026quot;: 150, \u0026quot;nodeRadius\u0026quot;: 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch {{\u0026lt; /mermaid\u0026gt;}}  renders as\ngitGraph: options { \"nodeSpacing\": 150, \"nodeRadius\": 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch  State Diagrams {{\u0026lt; mermaid \u0026gt;}} stateDiagram-v2 open: Open Door closed: Closed Door locked: Locked Door open --\u0026gt; closed: Close closed --\u0026gt; locked: Lock locked --\u0026gt; closed: Unlock closed --\u0026gt; open: Open {{\u0026lt; /mermaid \u0026gt;}}  renders as\nstateDiagram-v2 open: Open Door closed: Closed Door locked: Locked Door open -- closed: Close closed -- locked: Lock locked -- closed: Unlock closed -- open: Open  "
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/mermaid.fr/",
	"title": "Mermaid",
	"tags": [],
	"description": "Génération de diagrammes à partir de texte, dans le même style que Markdown",
	"content": "Mermaid est une bibliothèque Javascript qui permet de générer des diagrammes (séquence, état, gantt, etc.) à partir de texte, dans le même style que Markdown.\nInsérer votre code Mermaid dans un shortcode mermaid et c\u0026rsquo;est tout.\nFlowchart example {{\u0026lt;mermaid align=\u0026quot;left\u0026quot;\u0026gt;}} graph LR; A[Bords droits] --\u0026gt;|Lien texte| B(Bords arondis) B --\u0026gt; C{Décision} C --\u0026gt;|Un| D[Résultat un] C --\u0026gt;|Deux| E[Résultat deux] {{\u0026lt; /mermaid \u0026gt;}}  renders as\ngraph LR; A[Bords droits] --|Lien texte| B(Bords arondis) B -- C{Décision} C --|Un| D[Résultat un] C --|Deux| E[Résultat deux]  Sequence example {{\u0026lt;mermaid\u0026gt;}} sequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Salut John, comment vas-tu? loop Vérification John-\u0026gt;John: Se bat contre l'hyponcodrie. end Note right of John: Les pensées rationnelles\u0026lt;br/\u0026gt;prédominent... John--\u0026gt;Alice: Super! John-\u0026gt;Bob: Et toi? Bob--\u0026gt;John: Au top! {{\u0026lt; /mermaid \u0026gt;}}  renders as\nsequenceDiagram participant Alice participant Bob Alice-John: Salut John, comment vas-tu? loop Vérification John-John: Se bat contre l'hyponcodrie. end Note right of John: Les pensées rationnellesprédominent... John--Alice: Super! John-Bob: Et toi? Bob--John: Au top!  GANTT Example {{\u0026lt;mermaid\u0026gt;}} gantt dateFormat YYYY-MM-DD title Ajout de la fonctionnalité de GANTT à Mermaid section Une section Tâche complétée :done, des1, 2014-01-06,2014-01-08 Tâche en cours :active, des2, 2014-01-09, 3d Future tâche : des3, after des2, 5d Future tâche 2 : des4, after des3, 5d section Tâches critiques Tâche complétée dans le chemin critique :crit, done, 2014-01-06,24h Implémenter le parser et jison :crit, done, after des1, 2d Créer des tests pour le parser :crit, active, 3d Future tâche dans le chemin critique :crit, 5d Créer des tests pour le renderer :2d Ajout à Mermaid :1d {{\u0026lt; /mermaid \u0026gt;}}  renders as\ngantt dateFormat YYYY-MM-DD title Ajout de la fonctionnalité de GANTT à Mermaid section Une section Tâche complétée :done, des1, 2014-01-06,2014-01-08 Tâche en cours :active, des2, 2014-01-09, 3d Future tâche : des3, after des2, 5d Future tâche 2 : des4, after des3, 5d section Tâches critiques Tâche complétée dans le chemin critique :crit, done, 2014-01-06,24h Implémenter le parser et jison :crit, done, after des1, 2d Créer des tests pour le parser :crit, active, 3d Future tâche dans le chemin critique :crit, 5d Créer des tests pour le renderer :2d Ajout à Mermaid :1d  Class example {{/* mermaid */}} classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u0026lt;--\u0026gt; C2: Cool label {{/* /mermaid */}}  renders as\nclassDiagram Class01 C2 : Where am i? Class09 --* C3 Class09 --| Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08  C2: Cool label  Git example {{\u0026lt; mermaid \u0026gt;}} gitGraph: options { \u0026quot;nodeSpacing\u0026quot;: 150, \u0026quot;nodeRadius\u0026quot;: 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch {{\u0026lt; /mermaid \u0026gt;}}  renders as\ngitGraph: options { \"nodeSpacing\": 150, \"nodeRadius\": 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch  State Diagrams {{\u0026lt; mermaid \u0026gt;}} stateDiagram-v2 ouvert: Ouvert clos: Clos fermé: Fermé ouvert --\u0026gt; clos clos --\u0026gt; fermé: Lock fermé --\u0026gt; clos: Unlock clos --\u0026gt; ouvert: Open {{\u0026lt; /mermaid \u0026gt;}}  renders as\nstateDiagram-v2 ouvert: Ouvert clos: Clos fermé: Fermé ouvert -- clos clos -- fermé: Lock fermé -- clos: Unlock clos -- ouvert: Open  "
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/notice/",
	"title": "Notice",
	"tags": [],
	"description": "Disclaimers to help you structure your page",
	"content": "The notice shortcode shows 4 types of disclaimers to help you structure your page.\nNote {{% notice note %}} A notice disclaimer {{% /notice %}} renders as\nA notice disclaimer\n Info {{% notice info %}} An information disclaimer {{% /notice %}} renders as\nAn information disclaimer\n Tip {{% notice tip %}} A tip disclaimer {{% /notice %}} renders as\nA tip disclaimer\n Warning {{% notice warning %}} A warning disclaimer {{% /notice %}} renders as\nA warning disclaimer\n "
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/notice.fr/",
	"title": "Notice",
	"tags": [],
	"description": "Message pour vous aider à structurer votre contenu",
	"content": "Le shortcode Notice permet d\u0026rsquo;afficher 4 types de message pour vous aider à structurer votre contenu.\nNote {{% notice note %}} Une notice de type *note* {{% /notice %}} s\u0026rsquo;affiche comme\nUne notice de type note\n Info {{% notice info %}} Une notice de type *info* {{% /notice %}} s\u0026rsquo;affiche comme\nUne notice de type info\n Tip {{% notice tip %}} Une notice de type *tip* {{% /notice %}} s\u0026rsquo;affiche comme\nUne notice de type tip\n Warning {{% notice warning %}} Une notice de type *warning* {{% /notice %}} s\u0026rsquo;affiche comme\nUne notice de type warning\n "
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/children/children-1/",
	"title": "page 1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/children/children-1/children-1-1/",
	"title": "page 1-1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/children/children-1/children-1-1/children-1-1-1/",
	"title": "page 1-1-1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/",
	"title": "page 1-1-1-1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/children-1-1-1-1-1/",
	"title": "page 1-1-1-1-1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/children/children-2/",
	"title": "page 2",
	"tags": [],
	"description": "",
	"content": "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/children/children-3/",
	"title": "page 3",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page, not displayed in the menu\n"
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/children/children-4/",
	"title": "page 4",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page, not displayed in the menu\n"
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/children/test/",
	"title": "page test",
	"tags": [],
	"description": "This is a page test",
	"content": "This is a test demo child page\n"
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/children/test.fr/",
	"title": "page test",
	"tags": [],
	"description": "Ceci est une page test",
	"content": "Ceci est une page de demo\n"
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/children/children-2/test3/",
	"title": "page test 3",
	"tags": [],
	"description": "This is a page test",
	"content": "This is a test 3 demo child page\n"
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/children/children-2/test3.fr/",
	"title": "page test 3",
	"tags": [],
	"description": "Ceci est une page test",
	"content": "Ceci est une page de demo test 3\n"
},
{
	"uri": "https://Erdan101.github.io/en/showcase/",
	"title": "Showcase",
	"tags": [],
	"description": "",
	"content": "TAT by OVH Tshark.dev by Ross Jacobs inteliver by Amir Lavasani "
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/siteparam/",
	"title": "Site param",
	"tags": [],
	"description": "Get value of site params variables in your page.",
	"content": "siteparam shortcode is used to help you print values of site params.\nFor instance, in this current site, the editURL variable is used in config.toml\n[params] editURL = \u0026#34;https://github.com/matcornic/hugo-theme-learn/edit/master/exampleSite/content/\u0026#34; Use the siteparam shortcode to display its value.\n`editURL` Value : {{% siteparam \u0026quot;editURL\u0026quot; %}} is displayed as\neditURL Value : https://github.com/matcornic/hugo-theme-learn/edit/master/exampleSite/content/\n"
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/siteparam.fr/",
	"title": "Site param",
	"tags": [],
	"description": "Afficher la valeur d&#39;un paramètre global du site dans votre page",
	"content": "Les shortcode siteparam est utilisé pour vous aider à afficher des valeurs provenant des paramètres globaux du site.\nPar exemple, dans ce site, le paramètre editURL est utilisé dans le fichier config.toml\n[params] editURL = \u0026#34;https://github.com/matcornic/hugo-theme-learn/edit/master/exampleSite/content/\u0026#34; Utilisez le shortcode siteparam pour affichier sa valeur.\nValeur de `editURL` : {{% siteparam \u0026quot;editURL\u0026quot; %}} s\u0026rsquo;affiche comme\nValeur de editURL : https://github.com/matcornic/hugo-theme-learn/edit/master/exampleSite/content/\n"
},
{
	"uri": "https://Erdan101.github.io/en/shortcodes/tabs/",
	"title": "Tabbed views",
	"tags": [],
	"description": "Synchronize selection of content in different tabbed views",
	"content": "Choose which content to see across the page. Very handy for providing code snippets for multiple languages or providing configuration in different formats.\nCode example {{\u0026lt; tabs \u0026gt;}} {{% tab name=\u0026quot;python\u0026quot; %}} ```python print(\u0026quot;Hello World!\u0026quot;) ``` {{% /tab %}} {{% tab name=\u0026quot;R\u0026quot; %}} ```R \u0026gt; print(\u0026quot;Hello World!\u0026quot;) ``` {{% /tab %}} {{% tab name=\u0026quot;Bash\u0026quot; %}} ```Bash echo \u0026quot;Hello World!\u0026quot; ``` {{% /tab %}} {{\u0026lt; /tabs \u0026gt;}}  Renders as:\npython R Bash  print(\u0026#34;Hello World!\u0026#34;)   \u0026gt; print(\u0026#34;Hello World!\u0026#34;)   echo \u0026#34;Hello World!\u0026#34;     Tab views with the same tabs that belong to the same group sychronize their selection:\npython R Bash  print(\u0026#34;Hello World!\u0026#34;)   \u0026gt; print(\u0026#34;Hello World!\u0026#34;)   echo \u0026#34;Hello World!\u0026#34;     Config example {{\u0026lt; tabs groupId=\u0026quot;config\u0026quot; \u0026gt;}} {{% tab name=\u0026quot;json\u0026quot; %}} ```json { \u0026quot;Hello\u0026quot;: \u0026quot;World\u0026quot; } ``` {{% /tab %}} {{% tab name=\u0026quot;XML\u0026quot; %}} ```xml \u0026lt;Hello\u0026gt;World\u0026lt;/Hello\u0026gt; ``` {{% /tab %}} {{% tab name=\u0026quot;properties\u0026quot; %}} ```properties Hello = World ``` {{% /tab %}} {{\u0026lt; /tabs \u0026gt;}}  Renders as:\njson XML properties  { \u0026#34;Hello\u0026#34;: \u0026#34;World\u0026#34; }   \u0026lt;Hello\u0026gt;World\u0026lt;/Hello\u0026gt;   Hello = World     When using tab views with different content sets, make sure to use a common groupId for equal sets but distinct groupId for different sets. The groupId defaults to 'default'.\nTake this into account across the whole site!\nThe tab selection is restored automatically based on the groupId and if it cannot find a tab item because it came from the 'default' group on a different page then all tabs will be empty at first.\n "
},
{
	"uri": "https://Erdan101.github.io/en/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://Erdan101.github.io/en/vitrine/",
	"title": "Vitrine",
	"tags": [],
	"description": "",
	"content": "TAT par OVH Tshark.dev par Ross Jacobs inteliver by Amir Lavasani "
}]